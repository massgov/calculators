/* eslint-disable no-console, prefer-template */
const fs = require('fs');
const https = require('https');
const os = require('os');

const generatedMessage = '// *NOTICE* This file is generated by the build, do not edit directly.';
const eslintDisable = '/* eslint-disable quotes, quote-props */';

const footerLinks = {
  items: [{
    heading: 'FooterLinks1',
    id: 'FooterLinks1',
    links: []
  }, {
    heading: 'FooterLinks2',
    id: 'FooterLinks2',
    links: []
  }]
};

try {
  https.get('https://www.mass.gov/jsonapi/menu_link_content/menu_link_content', (resp) => {
    const dataFileName = 'src/data/Footer.data.js';
    const varName = 'footerLinks';

    let data = '';
    resp.on('data', (chunk) => { data += chunk; });

    resp.on('end', () => {
      const footer = JSON.parse(data);

      footer.data.forEach((item) => {
        const { attributes, type } = item;
        if (type && type === 'menu_link_content--menu_link_content' && attributes && attributes.enabled) {
          // eslint-disable-next-line camelcase
          const { menu_name, title, link } = attributes;
          footerLinks.items.forEach((ogItem) => {
            // eslint-disable-next-line camelcase
            if (ogItem.id === 'FooterLinks1' && menu_name === 'footer-1') {
              const footerLink = {
                href: `https://mass.gov${link.uri}`,
                text: title
              };
              ogItem.links.push(footerLink);
            }
            // eslint-disable-next-line camelcase
            if (ogItem.id === 'FooterLinks2' && menu_name === 'footer-2') {
              const footerLink = {
                href: `https://mass.gov${link.uri}`,
                text: title
              };
              ogItem.links.push(footerLink);
            }
          });
        }
      });

      // Write out the JSON, formatted with 2 space indent, as a JS module.
      data = JSON.stringify(footerLinks, null, 2);

      const content = generatedMessage + os.EOL
        + eslintDisable + os.EOL
        + `const ${varName} = ${data};` + os.EOL
        + `export default { ${varName} };` + os.EOL;

      fs.writeFileSync(dataFileName, content, 'utf8', (err) => {
        if (err) throw err;
      });
    });
  }).on('error', (err) => {
    throw err;
  });
} catch (e) {
  console.log(`Error: ${e.message}`);
  process.exit(1);
}
